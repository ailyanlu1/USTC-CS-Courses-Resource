此文档记录各个组员遇到的问题和解答

q1: 在《垃圾回收算法与实现》中第二章2.3.3节《与写时复制计数不兼容》中，谈到了写时复制时遇到的问题：即使没有重写对象，GC也会设置所有活动对象的标志位，这样就会频繁发生不应该发生的复制，压迫到内存空间。这句话如何理解？
是说，在若干个复制的进程中，只要有一个用到了gc，然后这时候各个对象，还在共享的对象，的object.mark位就会根据是不是还是存活的对象，object.mark被gc改写，所以这时候共享内存的时候发现内存变了，就需要写时复制一份出去，导致内存被消耗。是这样理解的吗？
a1: 是的。copy-on-write就是想节省内存空间，才不得已复制written的部分，标记-清除的gc工作时会影响所有object.mark，也就失去了copy-on-write的本意。

q2: 上课时，老师提到了问我们concurrent GC和parallel GC的区别是什么。
a2:
 1、并行Parallel
多条垃圾收集线程并行工作，但此时用户线程仍然处于等待状态
2、并发Concurrent
指用户线程与垃圾收集线程同时执行（但并不一定是并行的，可能会交替执行），用户程序在继续运行，而垃圾收集程序运行于另一个CPU上
