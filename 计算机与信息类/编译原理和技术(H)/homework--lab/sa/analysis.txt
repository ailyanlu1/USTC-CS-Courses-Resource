
4.1 分析现有的checker
·还有的缺陷：
    1. 根据智能指针部分的问题，对于c++11已经被deprecated的auto_ptr,发现:clang没有对于auto_ptr的warning，而另一方面优秀的g++则早已能够提示这一warning。
    2. 对于SimpleStreamChecker，对于多个doubleclose，只会报一个错误。
    3. 一旦遇到error，就不会生成warning，本来可以检查出更多错误的。
    4. new、delete在CFG中没有显示更具体的函数细节。
·对于文件未关闭或多重关闭的检查：
1. 是否能检查该类缺陷?
    能够处理一些简单而直观的缺陷。

2. 检查能力到什么程度（程序存在哪些特征时检查不出来）?
    比如将文件指针传给其他函数；
    比如在其他函数关闭文件，而报没有关闭；
    比如多重关闭的错误只会报第一个warning，而忽视了其他的warning；
    比如对文件指针进行较为复杂的运算，比如套一个for循环等；

3. 检查的实现机制是什么？列出相关的源码位置和主要处理流程
    首先在函数调用之后，通过checkPostCall检查，如果是fopen，那么设置这个文件句柄的状态为打开。源码位于SimpleStreamChecker的Line 118。
    其次在函数调用之前，通过checkPreCall检查，如果是fclose，是否有两次的doubleclose。源码位于SimpleStreamChecker的Line 137。
    之后在离开一个作用域等会产生dead symbol时，通过checkDeadSymbols检查，是否有leak的文件指针，如果有追踪不到的，那么放过不报warning。源码位于SimpleStreamChecker的Line 175。

4. （可选）从实现机制上分析，为什么检查不出来上述问题2的解答中所列的特征？
    当文件指针传给其他函数时，可能会带来十分复杂的结果。
    多个多重关闭的错误其实可以报多个错误，但是没有这么实现。
    对文件指针进行复杂运算时，
5. （可选）如果想增强检查能力，可以怎么做？
    可以通过增强静态运算的追踪能力，来计算出更多能够静态计算出的值，来进行检查。
    对于多个多重关闭等错误只报第一个warning，可以把这些bugreport都放在一起最终一起提交bug，而不是直接生成一个sink。
